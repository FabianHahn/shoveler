#ifndef SHOVELER_SCHEMA_OPENGL_H
#define SHOVELER_SCHEMA_OPENGL_H

typedef struct ShovelerSchemaStruct ShovelerSchema;

extern const char* const shovelerComponentTypeIdCanvas;
extern const char* const shovelerComponentTypeIdClient;
extern const char* const shovelerComponentTypeIdDrawable;
extern const char* const shovelerComponentTypeIdFontAtlasTexture;
extern const char* const shovelerComponentTypeIdLight;
extern const char* const shovelerComponentTypeIdMaterial;
extern const char* const shovelerComponentTypeIdModel;
extern const char* const shovelerComponentTypeIdSampler;
extern const char* const shovelerComponentTypeIdSprite;
extern const char* const shovelerComponentTypeIdTextSprite;
extern const char* const shovelerComponentTypeIdTextTextureRenderer;
extern const char* const shovelerComponentTypeIdTexture;
extern const char* const shovelerComponentTypeIdTextureSprite;
extern const char* const shovelerComponentTypeIdTileSprite;
extern const char* const shovelerComponentTypeIdTileSpriteAnimation;
extern const char* const shovelerComponentTypeIdTilemap;
extern const char* const shovelerComponentTypeIdTilemapColliders;
extern const char* const shovelerComponentTypeIdTilemapSprite;
extern const char* const shovelerComponentTypeIdTilemapTiles;
extern const char* const shovelerComponentTypeIdTileset;

typedef enum {
  SHOVELER_COMPONENT_CANVAS_FIELD_ID_NUM_LAYERS,
} ShovelerComponentCanvasFieldId;

typedef enum {
  SHOVELER_COMPONENT_CLIENT_FIELD_ID_POSITION,
  SHOVELER_COMPONENT_CLIENT_FIELD_ID_MODEL,
} ShovelerComponentClientFieldId;

typedef enum {
  SHOVELER_COMPONENT_DRAWABLE_FIELD_ID_TYPE,
  SHOVELER_COMPONENT_DRAWABLE_FIELD_ID_TILES_WIDTH,
  SHOVELER_COMPONENT_DRAWABLE_FIELD_ID_TILES_HEIGHT,
} ShovelerComponentDrawableFieldId;

typedef enum {
  SHOVELER_COMPONENT_DRAWABLE_TYPE_CUBE,
  SHOVELER_COMPONENT_DRAWABLE_TYPE_QUAD,
  SHOVELER_COMPONENT_DRAWABLE_TYPE_POINT,
  SHOVELER_COMPONENT_DRAWABLE_TYPE_TILES,
} ShovelerComponentDrawableType;

typedef enum {
  SHOVELER_COMPONENT_FONT_ATLAS_TEXTURE_FIELD_ID_FONT_ATLAS,
} ShovelerComponentFontAtlasTextureFieldId;

typedef enum {
  SHOVELER_COMPONENT_LIGHT_FIELD_ID_POSITION,
  SHOVELER_COMPONENT_LIGHT_FIELD_ID_TYPE,
  SHOVELER_COMPONENT_LIGHT_FIELD_ID_WIDTH,
  SHOVELER_COMPONENT_LIGHT_FIELD_ID_HEIGHT,
  SHOVELER_COMPONENT_LIGHT_FIELD_ID_SAMPLES,
  SHOVELER_COMPONENT_LIGHT_FIELD_ID_AMBIENT_FACTOR,
  SHOVELER_COMPONENT_LIGHT_FIELD_ID_EXPONENTIAL_FACTOR,
  SHOVELER_COMPONENT_LIGHT_FIELD_ID_COLOR,
} ShovelerComponentLightFieldId;

typedef enum {
  SHOVELER_COMPONENT_LIGHT_TYPE_SPOT,
  SHOVELER_COMPONENT_LIGHT_TYPE_POINT
} ShovelerComponentLightType;

typedef enum {
  SHOVELER_COMPONENT_MATERIAL_TYPE_COLOR,
  SHOVELER_COMPONENT_MATERIAL_TYPE_TEXTURE,
  SHOVELER_COMPONENT_MATERIAL_TYPE_PARTICLE,
  SHOVELER_COMPONENT_MATERIAL_TYPE_TILEMAP,
  SHOVELER_COMPONENT_MATERIAL_TYPE_CANVAS,
  SHOVELER_COMPONENT_MATERIAL_TYPE_TEXTURE_SPRITE,
  SHOVELER_COMPONENT_MATERIAL_TYPE_TILE_SPRITE,
  SHOVELER_COMPONENT_MATERIAL_TYPE_TEXT,
} ShovelerComponentMaterialType;

typedef enum {
  /** A ShovelerComponentMaterialType specifying the type of this material. */
  SHOVELER_COMPONENT_MATERIAL_FIELD_ID_TYPE,
  /**
   * If type is SHOVELER_COMPONENT_MATERIAL_TYPE_TEXTURE, a ShovelerMaterialTextureType that
   * further specifies the type of the texture material.
   */
  SHOVELER_COMPONENT_MATERIAL_FIELD_ID_TEXTURE_TYPE,
  /**
   * If type is SHOVELER_COMPONENT_MATERIAL_TYPE_TEXTURE_SPRITE, a
   * ShovelerMaterialTextureSpriteType that further specifies the type of the texture material.
   */
  SHOVELER_COMPONENT_MATERIAL_FIELD_ID_TEXTURE_SPRITE_TYPE,
  SHOVELER_COMPONENT_MATERIAL_FIELD_ID_TEXTURE,
  SHOVELER_COMPONENT_MATERIAL_FIELD_ID_TEXTURE_SAMPLER,
  SHOVELER_COMPONENT_MATERIAL_FIELD_ID_TILEMAP,
  SHOVELER_COMPONENT_MATERIAL_FIELD_ID_CANVAS,
  SHOVELER_COMPONENT_MATERIAL_FIELD_ID_COLOR,
  SHOVELER_COMPONENT_MATERIAL_FIELD_ID_CANVAS_REGION_POSITION,
  SHOVELER_COMPONENT_MATERIAL_FIELD_ID_CANVAS_REGION_SIZE,
} ShovelerComponentMaterialFieldId;

typedef enum {
  SHOVELER_COMPONENT_MODEL_FIELD_ID_POSITION,
  SHOVELER_COMPONENT_MODEL_FIELD_ID_DRAWABLE,
  SHOVELER_COMPONENT_MODEL_FIELD_ID_MATERIAL,
  SHOVELER_COMPONENT_MODEL_FIELD_ID_ROTATION,
  SHOVELER_COMPONENT_MODEL_FIELD_ID_SCALE,
  SHOVELER_COMPONENT_MODEL_FIELD_ID_VISIBLE,
  SHOVELER_COMPONENT_MODEL_FIELD_ID_EMITTER,
  SHOVELER_COMPONENT_MODEL_FIELD_ID_CASTS_SHADOW,
  SHOVELER_COMPONENT_MODEL_FIELD_ID_POLYGON_MODE,
} ShovelerComponentModelFieldId;

typedef enum {
  SHOVELER_COMPONENT_MODEL_POLYGON_MODE_POINT,
  SHOVELER_COMPONENT_MODEL_POLYGON_MODE_LINE,
  SHOVELER_COMPONENT_MODEL_POLYGON_MODE_FILL,
} ShovelerComponentModelPolygonMode;

typedef enum {
  SHOVELER_COMPONENT_SAMPLER_FIELD_ID_INTERPOLATE,
  SHOVELER_COMPONENT_SAMPLER_FIELD_ID_USE_MIPMAPS,
  SHOVELER_COMPONENT_SAMPLER_FIELD_ID_CLAMP,
} ShovelerComponentSamplerFieldId;

typedef enum {
  SHOVELER_COMPONENT_SPRITE_FIELD_ID_POSITION,
  SHOVELER_COMPONENT_SPRITE_FIELD_ID_POSITION_MAPPING_X,
  SHOVELER_COMPONENT_SPRITE_FIELD_ID_POSITION_MAPPING_Y,
  SHOVELER_COMPONENT_SPRITE_FIELD_ID_ENABLE_COLLIDER,
  SHOVELER_COMPONENT_SPRITE_FIELD_ID_CANVAS,
  SHOVELER_COMPONENT_SPRITE_FIELD_ID_LAYER,
  SHOVELER_COMPONENT_SPRITE_FIELD_ID_SIZE,
  SHOVELER_COMPONENT_SPRITE_FIELD_ID_TEXT_SPRITE,
  SHOVELER_COMPONENT_SPRITE_FIELD_ID_TILE_SPRITE,
  SHOVELER_COMPONENT_SPRITE_FIELD_ID_TILEMAP_SPRITE,
  SHOVELER_COMPONENT_SPRITE_FIELD_ID_TEXTURE_SPRITE,
} ShovelerComponentSpriteFieldId;

typedef enum {
  SHOVELER_COMPONENT_TEXT_SPRITE_FIELD_ID_MATERIAL,
  SHOVELER_COMPONENT_TEXT_SPRITE_FIELD_ID_FONT_ATLAS,
  SHOVELER_COMPONENT_TEXT_SPRITE_FIELD_ID_FONT_SIZE,
  SHOVELER_COMPONENT_TEXT_SPRITE_FIELD_ID_CONTENT,
  SHOVELER_COMPONENT_TEXT_SPRITE_FIELD_ID_COLOR,
} ShovelerComponentTextSpriteFieldId;

typedef enum {
  SHOVELER_COMPONENT_TEXT_TEXTURE_RENDERER_FIELD_ID_FONT_ATLAS_TEXTURE,
} ShovelerComponentTextTextureRendererFieldId;

typedef enum {
  SHOVELER_COMPONENT_TEXTURE_TYPE_IMAGE,
  SHOVELER_COMPONENT_TEXTURE_TYPE_TEXT,
} ShovelerComponentTextureType;

typedef enum {
  SHOVELER_COMPONENT_TEXTURE_FIELD_ID_TYPE,
  SHOVELER_COMPONENT_TEXTURE_FIELD_ID_IMAGE,
  SHOVELER_COMPONENT_TEXTURE_FIELD_ID_TEXT_TEXTURE_RENDERER,
  SHOVELER_COMPONENT_TEXTURE_FIELD_ID_TEXT,
} ShovelerComponentTextureFieldId;

typedef enum {
  SHOVELER_COMPONENT_TEXTURE_SPRITE_FIELD_ID_MATERIAL,
  SHOVELER_COMPONENT_TEXTURE_SPRITE_FIELD_ID_TEXTURE,
  SHOVELER_COMPONENT_TEXTURE_SPRITE_FIELD_ID_SAMPLER,
  SHOVELER_COMPONENT_TEXTURE_SPRITE_FIELD_ID_SCALE,
} ShovelerComponentTextureSpriteFieldId;

typedef enum {
  SHOVELER_COMPONENT_TILE_SPRITE_FIELD_ID_MATERIAL,
  SHOVELER_COMPONENT_TILE_SPRITE_FIELD_ID_TILESET,
  SHOVELER_COMPONENT_TILE_SPRITE_FIELD_ID_TILESET_COLUMN,
  SHOVELER_COMPONENT_TILE_SPRITE_FIELD_ID_TILESET_ROW,
} ShovelerComponentTileSpriteFieldId;

typedef enum {
  SHOVELER_COMPONENT_TILE_SPRITE_ANIMATION_OPTION_POSITION,
  SHOVELER_COMPONENT_TILE_SPRITE_ANIMATION_OPTION_TILE_SPRITE,
  SHOVELER_COMPONENT_TILE_SPRITE_ANIMATION_OPTION_POSITION_MAPPING_X,
  SHOVELER_COMPONENT_TILE_SPRITE_ANIMATION_OPTION_POSITION_MAPPING_Y,
  SHOVELER_COMPONENT_TILE_SPRITE_ANIMATION_OPTION_MOVE_AMOUNT_THRESHOLD,
} ShovelerComponentTileSpriteAnimationFieldId;

typedef enum {
  SHOVELER_COMPONENT_TILEMAP_FIELD_ID_TILES,
  SHOVELER_COMPONENT_TILEMAP_FIELD_ID_COLLIDERS,
  SHOVELER_COMPONENT_TILEMAP_FIELD_ID_TILESETS,
} ShovelerComponentTilemapFieldId;

typedef enum {
  SHOVELER_COMPONENT_TILEMAP_COLLIDERS_OPTION_NUM_COLUMNS,
  SHOVELER_COMPONENT_TILEMAP_COLLIDERS_OPTION_NUM_ROWS,
  SHOVELER_COMPONENT_TILEMAP_COLLIDERS_OPTION_COLLIDERS,
} ShovelerComponentTilemapCollidersFieldId;

typedef enum {
  SHOVELER_COMPONENT_TILEMAP_SPRITE_FIELD_ID_MATERIAL,
  SHOVELER_COMPONENT_TILEMAP_SPRITE_FIELD_ID_TILEMAP,
} ShovelerComponentTilemapSpriteFieldId;

typedef enum {
  SHOVELER_COMPONENT_TILEMAP_TILES_OPTION_IMAGE,
  SHOVELER_COMPONENT_TILEMAP_TILES_OPTION_NUM_COLUMNS,
  SHOVELER_COMPONENT_TILEMAP_TILES_OPTION_NUM_ROWS,
  SHOVELER_COMPONENT_TILEMAP_TILES_OPTION_TILESET_COLUMNS,
  SHOVELER_COMPONENT_TILEMAP_TILES_OPTION_TILESET_ROWS,
  SHOVELER_COMPONENT_TILEMAP_TILES_OPTION_TILESET_IDS,
} ShovelerComponentTilemapTilesFieldId;

typedef enum {
  SHOVELER_COMPONENT_TILESET_FIELD_ID_IMAGE,
  SHOVELER_COMPONENT_TILESET_FIELD_ID_NUM_COLUMNS,
  SHOVELER_COMPONENT_TILESET_FIELD_ID_NUM_ROWS,
  SHOVELER_COMPONENT_TILESET_FIELD_ID_PADDING,
} ShovelerComponentTilsetFieldId;

// Registers all opengl schema component types in the passed schema.
//
// Must not have registered any of these types before.
void shovelerSchemaOpenglRegister(ShovelerSchema* schema);

#endif
